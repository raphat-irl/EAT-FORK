//
//  DetailInteractor.swift
//  EAT&FORK
//
//  Created by MacbookAir M1 FoodStory on 12/1/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBusinessLogic
{
    func setupBasketUI(request: Detail.calculateBasketUI.Request)
    func setupUI(request: Detail.setUpUI.Request)
    func addToBasket(request: Detail.addToBasket.Request)
    func increaseButton(request:Detail.increaseButton.Request)
    func decreaseButton(request:Detail.decreaseButton.Request)
}

protocol DetailDataStore
{

}

class DetailInteractor: DetailBusinessLogic, DetailDataStore
{
  var menu: MenuResponse?
    
  var presenter: DetailPresentationLogic?
  var worker: DetailWorker?
  
  // MARK: Do something
    
    func setupBasketUI(request: Detail.calculateBasketUI.Request){
        var menuSumPrice: Int = 0
        var menuSumQuantity: Int = 0
        
        for items in request.addMenu {

            menuSumPrice += items.menu.price * items.quantity
            menuSumQuantity += items.quantity
        
        }
        
        let response = Detail.calculateBasketUI.Response(menuSumPrice:  menuSumPrice,
                                                         menuSumQuantity: menuSumQuantity)
        presenter?.presentBasketUI(response: response)
    }
    
    func setupUI(request: Detail.setUpUI.Request){
        
        let response = Detail.setUpUI.Response(menuList: request.menuList)
        
        presenter?.presentMenuUI(response: response)
        
    }
    
    func addToBasket(request: Detail.addToBasket.Request){
        
        let wantedQuantity: Int = request.wantedQuantity
    
        var newMenu = Main.MainModels.MenuQuantity(menu: Main.getMenu.ViewModel(id: 0, name: "", desc: "", url: "", price: 0, image_url: ""), quantity: 0)
        
        guard let menu = request.menuList else { return }
        if let existingMenu = request.addMenu.first(where: {$0.menu.id == menu.id}){
            existingMenu.quantity += wantedQuantity
        } else {
            newMenu = Main.MainModels.MenuQuantity(menu: menu, quantity: wantedQuantity)
            
        }
        let response = Detail.addToBasket.Response(newMenu: newMenu, wantedQuantity: wantedQuantity)
        
        presenter?.presentAddtoBasket(response: response)
    }
    
    func increaseButton(request:Detail.increaseButton.Request){
        
        var wantedQuantity: Int = request.wantedQuantity
        wantedQuantity += 1
        let minusminusButtonIsEnabled: Bool = true
        
        let response = Detail.increaseButton.Response(wantedQuantity: wantedQuantity, minusButtonIsEnabled: minusminusButtonIsEnabled)
        
        presenter?.presentIncreaseButton(response: response)
    }
    
    func decreaseButton(request:Detail.decreaseButton.Request){
        
        var wantedQuantity: Int = request.wantedQuantity
        var minusminusButtonIsEnabled: Bool
        
        if wantedQuantity == 1{
            minusminusButtonIsEnabled = false
        } else {
            minusminusButtonIsEnabled = true
            wantedQuantity -= 1
        }
        
        let response = Detail.decreaseButton.Response(wantedQuantity: wantedQuantity, minusButtonIsEnabled: minusminusButtonIsEnabled)
        
        presenter?.presentDecreaseButton(response: response)
    }
    
    
   
}
