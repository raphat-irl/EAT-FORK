//
//  PaymentInteractor.swift
//  EAT&FORK
//
//  Created by MacbookAir M1 FoodStory on 14/1/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PaymentBusinessLogic
{
    func calculateMenu(request: Payment.calculateMenu.Request)
}

protocol PaymentDataStore
{
  
}

class PaymentInteractor: PaymentBusinessLogic, PaymentDataStore
{
  var presenter: PaymentPresentationLogic?
  var worker: PaymentWorker?
    
    func calculateMenu(request: Payment.calculateMenu.Request){
        let addMenuIsNotEmpty = request.addMenu.count > 0
        var menuSumPrice: Double = 0
        var serviceCost: Double = 0
        var taxCost: Double = 0
        var totalPrice: Double = 0
        if addMenuIsNotEmpty {
            for item in request.addMenu {
                menuSumPrice += Double(item.menu.price * item.quantity)
                serviceCost = Double(Int(menuSumPrice * 10 / 100))
                taxCost = Double(Int(menuSumPrice * 7 / 100))
                totalPrice = menuSumPrice + serviceCost + taxCost
            }
            let response = Payment.calculateMenu.Response(menuSumPrice: menuSumPrice,
                                                          serviceCost: serviceCost,
                                                          taxCost: taxCost,
                                                          totalPrice: totalPrice)
            presenter?.presentCalculateMenu(response: response)
        } else {
            let response = Payment.calculateMenu.ResponseFail(addMenu: request.addMenu)
            presenter?.presentCalculateMenuFail(response: response)
        }
    }
    
  
}
